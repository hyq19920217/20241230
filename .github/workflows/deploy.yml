name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "*.html,*.php,config.php,db.php,nginx/**,vendor/**,composer.json,composer.lock,db/**"
          target: "/usr/share/nginx/html"
          
      - name: Set file permissions and configure nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 设置文件权限
            chown -R nginx:nginx /usr/share/nginx/html/
            chmod 755 /usr/share/nginx/html/*.html
            chmod 755 /usr/share/nginx/html/*.php
            chmod 777 /usr/share/nginx/html/tmp
            
            # 复制并应用 nginx 配置
            if [ -f /usr/share/nginx/html/nginx/nginx.conf ]; then
              cp /usr/share/nginx/html/nginx/nginx.conf /etc/nginx/nginx.conf
              nginx -t && systemctl restart nginx
            fi 

      - name: Install PHP and extensions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 安装必要的 PHP 版本和扩展
            sudo yum install -y php81-php php81-php-fpm \
              php81-php-gd php81-php-mbstring \
              php81-php-xml php81-php-dom \
              php81-php-zip \
              php81-php-pdo \
              php81-php-mysqlnd \
              php81-php-xmlreader \
              php81-php-xmlwriter

      - name: Set permissions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 创建必要的目录
            sudo mkdir -p /var/opt/remi/php81/run/php-fpm/
            sudo mkdir -p /var/opt/remi/php81/log/php-fpm/
            
            # 设置权限
            sudo chown -R nginx:nginx /var/opt/remi/php81/run/php-fpm/
            sudo chown -R nginx:nginx /var/opt/remi/php81/log/php-fpm/ 

      - name: Configure PHP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 停止所有 PHP-FPM
            sudo systemctl stop php-fpm || true
            sudo systemctl disable php-fpm || true
            sudo systemctl stop php81-php-fpm || true
            
            # 确保端口没有被占用
            sudo kill -9 $(sudo lsof -t -i:9000) || true
            
            # 配置 PHP-FPM
            sudo sed -i 's/user = apache/user = nginx/g' /etc/opt/remi/php81/php-fpm.d/www.conf
            sudo sed -i 's/group = apache/group = nginx/g' /etc/opt/remi/php81/php-fpm.d/www.conf
            sudo sed -i 's/listen.owner = apache/listen.owner = nginx/g' /etc/opt/remi/php81/php-fpm.d/www.conf
            sudo sed -i 's/listen.group = apache/listen.group = nginx/g' /etc/opt/remi/php81/php-fpm.d/www.conf
            
            # 启动新版 PHP-FPM
            sudo systemctl start php81-php-fpm
            sudo systemctl enable php81-php-fpm
            
            # 验证服务状态
            sudo systemctl status php81-php-fpm

            # 安装 Composer 依赖
            cd /usr/share/nginx/html
            /usr/bin/php81 -v  # 检查 PHP 版本
            /usr/bin/php81 /usr/local/bin/composer require phpoffice/phpspreadsheet

      - name: Initialize Database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            sudo mysql -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} content_db < /usr/share/nginx/html/db/init.sql 